---
name: ci-testing
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: test
        run: make test
      - name: Generate coverage report
        run: go tool cover -func=coverage.out
      - name: Generate HTML coverage report
        run: go tool cover -html=coverage.out -o coverage.html
      - name: Upload coverage reports as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage.out
            coverage.html
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  testacc:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        netbox-version:
          - v4.3.0
          # - v4.3.1 # with this version, we get {"scope":["Please select a site."]} for prefixes
          - v4.3.2
          - v4.3.3
          - v4.3.4
          - v4.3.5
          - v4.3.6
          - v4.3.7
          - v4.4.0
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: testacc
        run: make -e testacc
        env:
          NETBOX_VERSION: ${{ matrix.netbox-version }}
      - name: Check coverage threshold
        if: matrix.netbox-version == 'v4.2.9'  # Only check on one version to avoid duplication
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Current coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 75.0" | bc -l) )); then
            echo "Coverage dropped below 75%: $COVERAGE%"
            exit 1
          fi
